@page "/"
@using System.Security.Claims
@using QuotaApp.Models
@using QuotaApp.Services
@inject IQuotaService QuotaService
@inject AuthenticationStateProvider AuthenticationStateProvider
@rendermode InteractiveServer

<PageTitle>Veri Sorgulama</PageTitle>

<AuthorizeView>
    <NotAuthorized>
        @* GİRİŞ YAPMAMIŞ KULLANICI İÇİN AÇIKLAMA KARTI *@
        <div class="container mt-4">
            <div class="row justify-content-center">
                <div class="col-lg-8">
                    <div class="card text-center shadow-sm">
                        <div class="card-header">
                            <h4 class="my-2">Veri Sorgulama Platformuna Hoş Geldiniz!</h4>
                        </div>
                        <div class="card-body">
                            <p class="card-text">Bu platform, günlük ve aylık limitler dahilinde veri sorgulaması yapmanıza olanak tanır.</p>
                            <p class="card-text">Kullanım haklarınızı görüntülemek ve sorgulama yapmaya başlamak için lütfen giriş yapın veya yeni bir hesap oluşturun.</p>
                            <a href="Account/Login" class="btn btn-primary">Giriş Yap</a>
                            <a href="Account/Register" class="btn btn-secondary">Kayıt Ol</a>
                        </div>
                        <div class="card-footer text-muted">
                            Günlük 5 / Aylık 20 Sorgu Hakkı
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </NotAuthorized>
    <Authorized Context="authContext"> @* <-- HATA DÜZELTMESİ 1: Context yeniden adlandırıldı *@
        @* GİRİŞ YAPMIŞ KULLANICI İÇİN ANA PANEL *@
        <div class="d-flex justify-content-between align-items-center mb-3">
             <h1 class="mb-0">Veri Sorgulama Arayüzü</h1>
             <span class="text-muted">Hoş geldin, @authContext.User.Identity?.Name!</span> @* <-- HATA DÜZELTMESİ 2: Yeni context adı kullanıldı *@
        </div>

        @if (isPageLoading)
        {
            <div class="d-flex justify-content-center mt-5">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Yükleniyor...</span>
                </div>
            </div>
        }
        else if (usageInfo is not null)
        {
            <div class="card shadow-sm mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Kullanım Durumu</h5>
                </div>
                <div class="card-body">
                     <div class="row">
                        <div class="col-md-6 mb-3 mb-md-0">
                            <label class="form-label">Günlük Hak</label>
                            <div class="progress" style="height: 25px;">
                                <div class="progress-bar" role="progressbar" style="width: @(usageInfo.DayUsed * 20)%" aria-valuenow="@usageInfo.DayUsed" aria-valuemin="0" aria-valuemax="5">
                                    <strong>@usageInfo.DayUsed / 5</strong>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Aylık Hak</label>
                            <div class="progress" style="height: 25px;">
                                <div class="progress-bar bg-success" role="progressbar" style="width: @(usageInfo.MonthUsed * 5)%" aria-valuenow="@usageInfo.MonthUsed" aria-valuemin="0" aria-valuemax="20">
                                    <strong>@usageInfo.MonthUsed / 20</strong>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card shadow-sm">
                 <div class="card-header">
                    <h5 class="mb-0">Sorgulama Yap</h5>
                </div>
                <div class="card-body">
                    <EditForm Model="@searchRequest" OnValidSubmit="HandleSearchAsync" FormName="searchForm">
                        <div class="input-group">
                            <InputText @bind-Value="searchRequest.Term" class="form-control form-control-lg" placeholder="Aranacak kelimeyi girin..." />
                            <button type="submit" class="btn btn-primary" disabled="@(isFormLoading || usageInfo.DayRemaining <= 0 || usageInfo.MonthRemaining <= 0)">
                                @if (isFormLoading)
                                {
                                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                    <span class="ms-1">Sorgulanıyor...</span>
                                }
                                else
                                {
                                    <span>Sorgula</span>
                                }
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        }

        @if (!string.IsNullOrEmpty(errorMessage) || (usageInfo is not null && (usageInfo.DayRemaining <= 0 || usageInfo.MonthRemaining <= 0)))
        {
            <div class="alert @(string.IsNullOrEmpty(errorMessage) ? "alert-warning" : "alert-danger") mt-4" role="alert">
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    @errorMessage
                }
                else if (usageInfo.DayRemaining <= 0)
                {
                    <span>Günlük sorgu limitinize ulaştınız. Yarın tekrar deneyebilirsiniz.</span>
                }
                else
                {
                    <span>Aylık sorgu limitinize ulaştınız. Gelecek ay tekrar deneyebilirsiniz.</span>
                }
            </div>
        }


        @if (searchResults.Count > 0)
        {
            <div class="mt-4">
                <h4>Sorgu Sonuçları</h4>
                <ul class="list-group shadow-sm">
                    @foreach (var item in searchResults)
                    {
                        <li class="list-group-item">@item</li>
                    }
                </ul>
            </div>
        }
    </Authorized>
</AuthorizeView>


@code {
    private SearchRequest searchRequest = new();
    private UsageInfo? usageInfo;
    private List<string> searchResults = new();
    private string? errorMessage;
    private bool isPageLoading = true;
    private bool isFormLoading = false;
    
    private string? currentUserId;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        
        currentUserId = user.FindFirstValue(ClaimTypes.NameIdentifier);

        if (!string.IsNullOrEmpty(currentUserId))
        {
            try
            {
                usageInfo = await QuotaService.GetUsageAsync(currentUserId);
            }
            catch (Exception)
            {
                errorMessage = "Kullanım bilgileri yüklenirken bir hata oluştu.";
            }
        }
        isPageLoading = false;
    }

    private async Task HandleSearchAsync()
    {
        if (string.IsNullOrEmpty(currentUserId))
        {
            errorMessage = "Sorgu yapmak için giriş yapmalısınız.";
            return;
        }
        
        if (string.IsNullOrWhiteSpace(searchRequest.Term))
        {
            errorMessage = "Lütfen bir arama terimi girin.";
            return;
        }

        isFormLoading = true;
        errorMessage = null;
        searchResults.Clear();
        StateHasChanged(); 
        
        try
        {
            usageInfo = await QuotaService.TryConsumeAsync(currentUserId, searchRequest.Term);
            searchResults = new List<string> { $"'{searchRequest.Term}' için sonuç 1", $"'{searchRequest.Term}' için sonuç 2" };
        }
        catch (QuotaException ex)
        {
            errorMessage = ex.Message;
        }
        catch (Exception)
        {
            errorMessage = "Sorgulama sırasında beklenmedik bir hata oluştu.";
        }

        isFormLoading = false;
        searchRequest.Term = "";
        StateHasChanged();
    }
}